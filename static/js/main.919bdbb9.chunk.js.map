{"version":3,"sources":["hooks/useFetch.ts","store/prices.tsx","components/section/Section.tsx","components/dropdown/Dropdown.tsx","components/dropdown/DropdownItem.tsx","components/masthead/Masthead.tsx","components/main/Main.tsx","components/button/Button.tsx","components/go/Go.tsx","components/heading/Heading.tsx","components/currency/CurrencyDisplay.tsx","store/currency.tsx","components/currency/CurrencySelector.tsx","components/error/Error.tsx","components/loading/Loading.tsx","components/description/Description.tsx","components/description/DescriptionItem.tsx","components/card/Card.tsx","components/card/CardHeader.tsx","components/card/CardBody.tsx","components/brand/Brand.tsx","utils/index.tsx","routes/Landing.tsx","store/fancy.tsx","routes/FindCheapLiquor.tsx","routes/ListCocktails.tsx","routes/Find.tsx","routes/Make.tsx","routes/NotFound.tsx","App.tsx","index.tsx"],"names":["useFetch","url","options","cache","useRef","cancelRequest","initialState","error","undefined","data","useReducer","state","action","type","payload","dispatch","useEffect","a","current","fetch","response","ok","Error","statusText","json","fetchData","pricesContentState","atom","key","default","BTC","ETH","LTC","USD","Section","className","name","children","props","classes","classNames","Dropdown","id","onChange","DropdownItem","value","Masthead","Main","Button","Go","to","isPlain","Heading","Level","weight","isSmall","defaultProps","CurrencyDisplay","currency","price","currencyContentState","currencies","CurrencySelector","setCurrency","useSetRecoilState","event","target","map","Loading","Description","title","DescriptionItem","text","Card","CardHeader","CardBody","Brand","image","size","src","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getParams","param","split","normalizePrice","exchangeRate","digitsPastDecimal","parseFloat","toFixed","liquorList","Landing","history","useHistory","sortedLiquorList","sort","React","useState","selectedItem","setSelectedItem","onSubmit","e","preventDefault","push","pathname","search","htmlFor","liquor","fancyContentState","isFancy","FindCheapLiquor","input","setFancy","useRecoilValue","prices","cheapDrink","fancyDrink","currentCurrency","console","log","Fragment","onClick","ListCocktails","checkInput","count","drinks","cocktail","strDrink","Find","location","generateTextString","amount","ingredient","normalizedAmount","Make","currentDrink","ingredients","Object","keys","filter","includes","index","toString","strInstructions","App","setPrices","rates","exact","path","component","NotFound","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.919bdbb9.chunk.js","sourcesContent":["import { useEffect, useReducer, useRef } from 'react'\n\ninterface State<T> {\n  data?: T\n  error?: Error\n}\n\ntype Cache<T> = { [url: string]: T }\n\ntype Action<T> =\n  | { type: 'loading' }\n  | { type: 'fetched'; payload: T }\n  | { type: 'error'; payload: Error }\n\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({})\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false)\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  }\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n    case 'loading':\n      return { ...initialState }\n    case 'fetched':\n      return { ...initialState, data: action.payload }\n    case 'error':\n      return { ...initialState, error: action.payload }\n    default:\n      return state\n    }\n  }\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState)\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) { return }\n    const fetchData = async () => {\n      dispatch({ type: 'loading' })\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: 'fetched', payload: cache.current[url] })\n        return\n      }\n      try {\n        const response = await fetch(url, options)\n        if (!response.ok) {\n          throw new Error(response.statusText)\n        }\n        const data = (await response.json()) as T\n        cache.current[url] = data\n        if (cancelRequest.current) { return }\n        dispatch({ type: 'fetched', payload: data })\n      } catch (error) {\n        if (cancelRequest.current) { return }\n        dispatch({ type: 'error', payload: error as Error })\n      }\n    }\n    void fetchData()\n    return () => {\n      cancelRequest.current = true\n    }\n  }, [url])\n  return state\n}\n\nexport default useFetch","import { atom } from 'recoil';\n\nexport interface PricesContent {\n\tBTC: number,\n\tETH: number,\n\tLTC: number,\n\tUSD: number,\n}\n\nconst initialState: PricesContent = {\n  BTC: 0,\n  ETH: 0,\n  LTC: 0,\n  USD: 1\n};\n\nexport const pricesContentState = atom<PricesContent>({\n  key: 'PricesContents',\n  default: initialState,\n});\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Section.scss';\n\ninterface MainProps {\n  className?: string,\n  children: ReactNode,\n  name: string,\n}\n\nconst Section: React.FC<MainProps> = ({ className, name, children, ...props }) => {\n\n  const classes = classNames(\n    'section',\n    `section-${name}`,\n    className\n  );\n\n  return (\n    <section className={classes} {...props}>{children}</section>\n  );\n};\n\nexport default Section;\n\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Dropdown.scss';\n\ninterface DropdownProps {\n  className?: string,\n  name: string,\n  id: string,\n  children: ReactNode,\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ className, name, id, children, onChange, ...props }) => {\n\n  const classes = classNames(\n    'dropdown',\n    className\n  );\n\n\n  return (\n    <select className={classes} name={name} id={id} onChange={onChange} {...props}>\n      {children}\n    </select>\n  );\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './DropdownItem.scss';\n\ninterface DropdownItemProps {\n  className?: string,\n  value: string,\n  children: string\n}\n\nconst DropdownItem: React.FC<DropdownItemProps> = ({ className, value, children, ...props }) => {\n\n  const classes = classNames(\n    'dropdownitem',\n    className\n  );\n\n  return (\n    <option className={classes} value={value} {...props} key={value}>{children}</option>\n  );\n};\n\nexport default DropdownItem;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Masthead.scss';\n\ninterface SampleProps {\n  className?: string,\n  children: ReactNode\n}\n\nconst Masthead: React.FC<SampleProps> = ({ className, children, ...props }) => {\n\n  const classes = classNames(\n    'masthead',\n    className\n  );\n\n\n  return (\n    <header className={classes} {...props}> { children } </header>\n  );\n};\n\nexport default Masthead;\n","import React, { ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Main.scss';\r\n\r\ninterface MainProps {\r\n    children: ReactNode,\r\n    className?: string,\r\n    name: string\r\n}\r\n\r\nconst Main: React.FC<MainProps> = ({ children, className, name='base'}: MainProps) => {\r\n  \r\n  const classes = classNames(\r\n    'page',\r\n    `page-${name}`,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <main className={classes}>\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Button.scss';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    className?: string\n    children: React.ReactNode\n}\n\nconst Button: React.FC<ButtonProps> = ({ className, children, ...props }) => {\n\n  const classes = classNames(\n    'button',\n    className\n  );\n\n  return (\n    <button className={classes} {...props}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport './Go.scss';\n\ninterface GoProps {\n  className?: string,\n  to: {\n    pathname: string,\n    search?: string,\n    hash?: string,\n    state?: string,\n  },\n  children: ReactNode\n  isPlain?: boolean\n}\n\nconst Go: React.FC<GoProps> = ({ className, to, children, isPlain, ...props }) => {\n\n  const classes = classNames(\n    'go',\n    { 'go-isPlain': isPlain },\n    className\n  );\n\n\n  return (\n    <Link to={to} {...props} className={classes}> { children } </Link>\n  );\n};\n\nexport default Go;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Heading.scss';\n\ninterface HeadingProps {\n  className?: string,\n  Level: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  children: ReactNode,\n  isSmall?: boolean\n  weight?: 'light' | 'normal' | 'bold'\n}\n\nconst Heading: React.FC<HeadingProps> = ({ className, Level, weight, isSmall, children }) => {\n\n  const classes = classNames(\n    'heading',\n    `heading-${Level}`,\n    `heading-weight--${weight}`,\n    { [`heading-${Level}--isSmall`] : isSmall },\n    className\n  );\n\n  return (\n    <Level className={classes}>\n      {children}\n    </Level>\n  );\n};\n\n\nHeading.defaultProps = {\n  Level: 'h1',\n  weight: 'normal'\n};\n\nexport default Heading;","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Currency.scss';\n\ninterface CurrencyDisplayProps {\n  className?: string,\n  price: number,\n  currency: 'USD' | 'ETH' | 'BTC' | 'LTC'\n}\n\nconst CurrencyDisplay: React.FC<CurrencyDisplayProps> = ({ className, currency, price, ...props }) => {\n\n  const classes = classNames(\n    'currency',\n    `currency-${currency}`,\n    className\n  );\n\n\n  return (\n    <span className={classes} {...props}> { price } <sub>{currency}</sub></span>\n  );\n};\n\nexport default CurrencyDisplay;\n","import { atom } from 'recoil';\n\nexport interface CurrencyContent {\n  type: 'USD' | 'ETH' | 'BTC' | 'LTC';\n}\n\nconst initialState: CurrencyContent = {\n  type: 'USD'\n};\n\nexport const currencyContentState = atom<CurrencyContent>({\n  key: 'currencyContents',\n  default: initialState,\n});\n","import React from 'react';\nimport { useSetRecoilState } from 'recoil'\n\nimport { Dropdown, DropdownItem } from '../';\nimport { currencyContentState } from '../../store/currency';\n\nconst currencies = ['USD', 'ETH', 'BTC', 'LTC'];\n\nconst CurrencySelector: React.FC = () => {\n\n  const setCurrency = useSetRecoilState(currencyContentState);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n\n    // TODO rewrite this later\n    switch(value) {\n    case 'USD':\n      setCurrency({ type: 'USD' });\n      break;\n    case 'ETH':\n      setCurrency({ type: 'ETH' });\n      break;\n    case 'BTC':\n      setCurrency({ type: 'BTC' });\n      break;\n    case 'LTC':\n      setCurrency({ type: 'LTC' });\n      break;\n    default:\n      setCurrency({ type: 'USD' });\n      break;\n    }\n  };\n\n  return (\n    <Dropdown name='currency' id='currency' onChange={handleChange}>\n      { currencies.map(currency => <DropdownItem value={currency} key={currency}>{currency}</DropdownItem>)}\n    </Dropdown>\n  );\n};\n\nexport default CurrencySelector;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Heading, Section } from '../';\n\nimport './Error.scss';\n\ninterface ErrorProps {\n  className?: string,\n}\n\nconst Error: React.FC<ErrorProps> = ({ className, ...props }) => {\n\n  const classes = classNames(\n    'error',\n    className\n  );\n\n\n  return (\n    <Section name='error' className={classes} {...props}>\n      <Heading Level='h1'> Oh, fiddlesticks! </Heading>\n      <span> We just hit an error :( </span>\n    </Section>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Loading.scss';\n\ninterface LoadingProps {\n  className?: string\n}\n\nconst Loading: React.FC<LoadingProps> = ({ className, ...props }) => {\n\n  const classes = classNames(\n    'loading',\n    className\n  );\n\n\n  return (\n    <div className={classes} {...props}/>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Description.scss';\n\ninterface DescriptionProps {\n  className?: string,\n  title: string,\n}\n\nconst Description: React.FC<DescriptionProps> = ({ className, children, title, ...props }) => {\n\n  const classes = classNames(\n    'description',\n    className\n  );\n\n\n  return (\n    <dl className={classes} {...props}>\n      <dt> { title } </dt>\n      { children }\n    </dl>\n  );\n};\n\nexport default Description;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Description.scss';\n\ninterface DescriptionItemProps {\n  className?: string,\n  text: string,\n}\n\nconst DescriptionItem: React.FC<DescriptionItemProps> = ({ className, text, ...props }) => {\n\n  const classes = classNames(\n    'description-item',\n    className\n  );\n\n\n  return (\n    <dd className={classes} {...props}> { text } </dd>\n  );\n};\n\nexport default DescriptionItem;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Card.scss';\n\ninterface CardProps {\n  className?: string,\n  children: ReactNode\n}\n\nconst Card: React.FC<CardProps> = ({ className, children, ...props }) => {\n\n  const classes = classNames(\n    'card',\n    className\n  );\n\n\n  return (\n    <article className={classes} {...props}> { children } </article>\n  );\n};\n\nexport default Card;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Card.scss';\nimport { Heading } from '..';\n\ninterface CardHeaderProps {\n  className?: string,\n  children?: ReactNode,\n  title: string\n}\n\nconst CardHeader: React.FC<CardHeaderProps> = ({ className, children, title, ...props }) => {\n\n  const classes = classNames(\n    'card-header',\n    className\n  );\n\n\n  return (\n    <div className={classes} {...props}>\n      <Heading Level='h2'> {title}</Heading>\n      { children }\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Card.scss';\n\ninterface CardBodyProps {\n  className?: string,\n  children: ReactNode\n}\n\nconst CardBody: React.FC<CardBodyProps> = ({ className, children, ...props }) => {\n\n  const classes = classNames(\n    'card-body',\n    className\n  );\n\n\n  return (\n    <div className={classes} {...props}>\n      { children }\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Brand.scss';\n\ninterface BrandProps {\n  className?: string,\n  image: 'fish' | 'full-color' | 'full' | 'square' | 'text',\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n}\n\nconst Brand: React.FC<BrandProps> = ({ className, image, size, ...props }) => {\n\n  const classes = classNames(\n    'brand',\n    `brand-${size}`,\n    className\n  );\n\n  return (\n    <img src={`./images/${image}.png`} className={classes} {...props}/>\n  );\n};\n\n\nBrand.defaultProps = {\n  size: 'md'\n};\n\nexport default Brand;\n","export const capitalizeFirstLetter = (string:string):string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// get params from url\nexport const getParams = (param: string):string => {\n  return param.split('=')[1];\n}\n\n// converts price and limits decimal places\nexport const normalizePrice = (price: number, exchangeRate: number, digitsPastDecimal: number):number => {\n  return parseFloat((exchangeRate * price).toFixed(digitsPastDecimal)); // sub for current price later\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Dropdown, DropdownItem, Main, Button, Go } from '../components';\nimport { capitalizeFirstLetter } from '../utils';\n\nimport './Landing.scss';\n\nconst liquorList = [\n  'gin',\n  'vodka',\n  'tequila',\n  'rum',\n  'whiskey',\n  'scotch',\n  'rye',\n  'bourbon',\n  'amaretto',\n  'kahlua',\n];\n\nconst Landing: React.FC = () => {\n\n  const history = useHistory();\n\n  const sortedLiquorList = liquorList.sort();\n\n  const [selectedItem, setSelectedItem] = React.useState(sortedLiquorList[0]);\n\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>):void => {\n    e.preventDefault();\n    history.push({\n      pathname: '/find',\n      search: `?liquor=${selectedItem}`\n    });\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n    setSelectedItem(value);\n  };\n\n  return (\n    <Main name='landing'>\n      <form onSubmit={handleSubmit} className='landing-form'>\n        <label htmlFor='liquor'> Choose a liquor</label>\n        <Dropdown name='liquor' id='liquor' onChange={handleChange}>\n          { sortedLiquorList.map(liquor => <DropdownItem value={liquor} key={liquor}>{capitalizeFirstLetter(liquor)}</DropdownItem>)}\n        </Dropdown>\n        <Button type='submit' value='Submit'>Find it</Button>\n      </form>\n      <Go to={{pathname: '/find', search: '?liquor=Alcohol'}} className='drunk-button'> just get me as drunk as possible</Go>\n    </Main>\n  );\n};\n\nexport default Landing;\n","import { atom } from 'recoil';\n\nexport interface FancyContent {\n  isFancy: boolean;\n}\n\nconst initialState: FancyContent = {\n  isFancy: false\n};\n\nexport const fancyContentState = atom<FancyContent>({\n  key: 'fancyContents',\n  default: initialState,\n});\n","import React from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport useFetch from '../hooks/useFetch';\n\nimport { currencyContentState } from '../store/currency';\nimport { pricesContentState } from '../store/prices';\nimport { fancyContentState } from '../store/fancy';\n\nimport { BoozeInterface, BoozeDrinkEntity } from '../interfaces';\n\nimport { Section, Button, Heading, CurrencyDisplay, Error, Loading } from '../components';\n\nimport { normalizePrice } from '../utils';\n\nimport './Find.scss';\n\ninterface FindCheapLiquorProps {\n  input: string\n}\n\nconst FindCheapLiquor: React.FC<FindCheapLiquorProps> = ({ input }) => {\n\n  const { data, error } = useFetch<BoozeInterface>(`https://cbaas-api.herokuapp.com/booze?type=${input}`);\n  const setFancy = useSetRecoilState(fancyContentState);\n  const currency = useRecoilValue(currencyContentState);\n  const prices = useRecoilValue(pricesContentState);\n  const isFancy = useRecoilValue(fancyContentState).isFancy;\n\n  const cheapDrink:BoozeDrinkEntity = data && data[0];\n  const fancyDrink:BoozeDrinkEntity = data && data[1];\n\n  const currentCurrency = currency.type;\n\n  console.log('Booze', {data, error});\n\n  return (\n    <React.Fragment>\n      { error && <Error/> }\n      { !data && !error && <Loading/> }\n      { data &&\n        <Section name='results'>\n          { !isFancy\n            ? <React.Fragment>\n              <Heading Level='h2' weight='light'> { input === 'Alcohol' ? 'Yikes..... ' : '' }The absolute cheapest, bottom shelf {input} we could find is</Heading>\n              <span> {cheapDrink['Brand Name']} for <CurrencyDisplay price={normalizePrice(cheapDrink['Retail Bottle Price'], prices[currentCurrency], 5)} currency={currency.type}/></span>\n              <Button onClick={() => setFancy({ isFancy: !isFancy })}>\n                ✨ I'm feeling fancy ✨\n              </Button>\n            </React.Fragment>\n            : <React.Fragment>\n              <Heading Level='h2' weight='light'> Oh, you're feeling fancy?</Heading>\n              { fancyDrink ?\n                <>\n                  <span> {fancyDrink['Brand Name']} for a whopping <CurrencyDisplay price={normalizePrice(fancyDrink['Retail Bottle Price'], prices[currentCurrency], 5)} currency={currency.type}/></span>\n                </>\n                : <span> you actually already saw the fanciest drink...</span>\n              }\n              <Button onClick={() => setFancy({ isFancy: !isFancy })}>\n                  I'm feeling cheap\n              </Button>\n            </React.Fragment>\n          }\n        </Section>    \n      }\n    </React.Fragment>\n  );\n};\n\nexport default FindCheapLiquor;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil'\nimport useFetch from '../hooks/useFetch';\n\nimport { fancyContentState } from '../store/fancy';\n\nimport { SpiritDrinkInterface } from '../interfaces';\n\nimport { Section, Heading, Error, Loading, Go } from '../components';\n\nimport './ListCocktails.scss';\n\ninterface ListCocktailsProps {\n  input: string\n}\n\nconst checkInput = (input: string) => {\n  if(input === 'Rye') {\n    return 'rye whiskey'\n  }\n\n  return input;\n}\n\nconst ListCocktails: React.FC<ListCocktailsProps> = ({ input }) => {\n\n  const { data, error } = useFetch<SpiritDrinkInterface>(`https://cbaas-api.herokuapp.com/drinks?spirit=${checkInput(input)}`);\n\n  const isFancy = useRecoilValue(fancyContentState).isFancy;\n\n  console.log('Spirit', {data, error});\n  return (\n    <React.Fragment>\n      { error && <Error/> }\n      { !data && !error && <Loading/> }\n      { data &&\n          <Section name='cocktails'>\n            <Heading Level='h2' weight='light'> Here are the {data.count} cocktails you could make{ isFancy ? ', fancy pants' : ''}</Heading>\n            <ul className='cocktails-list'>\n              {data.drinks.map((cocktail: { strDrink: string }) =>\n                <li key={cocktail.strDrink} className='cocktails-list-item'>\n                  <Go to={{ pathname: '/make', search: `cocktail=${cocktail.strDrink}`}}>\n                    {cocktail.strDrink}\n                  </Go>\n                </li>\n              )}\n            </ul>\n          </Section>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default ListCocktails;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil'\nimport { useHistory } from 'react-router-dom';\nimport { fancyContentState } from '../store/fancy';\n\nimport { Main } from '../components';\n\nimport { getParams, capitalizeFirstLetter } from '../utils';\n\nimport './Find.scss';\nimport FindCheapLiquor from './FindCheapLiquor';\nimport ListCocktails from './ListCocktails';\n\nconst Find: React.FC = () => {\n\n  const input = capitalizeFirstLetter(getParams(useHistory().location.search));\n  const isFancy = useRecoilValue(fancyContentState).isFancy;\n  console.log(isFancy);\n\n  return (\n    <Main name='find' className={isFancy ? 'isFancy' : 'isCheap'}>\n      <FindCheapLiquor input={input}/>\n      <ListCocktails input={input}/>\n    </Main>\n  );\n};\n\nexport default Find;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\n\nimport { SpecDrinkInterface } from '../interfaces';\n\nimport { Main, Error, Loading, Description, DescriptionItem, Card, CardHeader, CardBody } from '../components';\n\nimport { getParams } from '../utils';\n\nimport './Make.scss';\n\nconst generateTextString = (amount:string, ingredient:string):string => {\n  let normalizedAmount = '';\n  if (amount != null) {\n    normalizedAmount = amount;\n  }\n  return `${normalizedAmount} ${ingredient}`\n}\n\nconst Make: React.FC = () => {\n\n  const input = getParams(useHistory().location.search);\n  const { data, error } = useFetch<SpecDrinkInterface>(`https://cbaas-api.herokuapp.com/spec?name=${input}`);\n  const currentDrink = data && data.drinks[0];\n\n  // api returns weird results, so we have to do some work to get the ingredients\n  const ingredients:string[] = [];\n  if(currentDrink) { \n    Object.keys(currentDrink).filter(key => key.includes('strIngredient') && ingredients.push(currentDrink[key]));\n  }\n\n  console.log('spec', {data, error});\n\n  return (\n    <Main name='make'>\n      { error && <Error/> }\n      { !data && !error && <Loading/> }\n      { currentDrink &&\n        <Card>\n          <CardHeader title={`You want to make a ${input}?`}/>\n          <CardBody>\n            <Description title='Ingredients'>\n              { ingredients.map((ingredient, index) => ingredient && <DescriptionItem text={generateTextString(currentDrink['strMeasure' + (index+1).toString()], ingredient)} key={ingredient}/>)}\n            </Description>\n            <Description title='Instructions'>\n              <DescriptionItem text={currentDrink.strInstructions}/>\n            </Description>\n          </CardBody>\n        </Card>\n      }\n    </Main>\n  );\n};\n\nexport default Make;\n","import React from 'react';\n\nimport './NotFound.scss';\n\nconst Landing: React.FC = () => {\n\n  return (\n    <span> oops </span>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil'\r\nimport useFetch from './hooks/useFetch';\r\n\r\nimport { pricesContentState } from './store/prices';\r\n\r\nimport Landing from './routes/Landing';\r\nimport Find from './routes/Find';\r\nimport Make from './routes/Make';\r\nimport NotFound from './routes/NotFound';\r\n\r\nimport { Masthead, Go, CurrencySelector, Brand } from './components';\r\n\r\nimport { ExchangeInterface } from './interfaces';\r\n\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const setPrices = useSetRecoilState(pricesContentState);\r\n\r\n  // this throws an error: https://github.com/facebookexperimental/Recoil/issues/12\r\n  const { data } = useFetch<ExchangeInterface>('https://api.coinbase.com/v2/exchange-rates?currency=USD');\r\n  data && setPrices({\r\n    BTC: data?.data.rates.BTC,\r\n    ETH: data?.data.rates.ETH,\r\n    LTC: data?.data.rates.LTC,\r\n    USD: 1\r\n  });\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Masthead> <Go to={{pathname: '/'}} isPlain><Brand image='text' size='sm'/></Go><CurrencySelector/></Masthead>\r\n      <Switch>\r\n        <Route exact path='/' component={ Landing }/>\r\n        <Route path='/find' component={ Find }/>\r\n        <Route path='/make' component={ Make }/>\r\n        <Route component={ NotFound } />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <RecoilRoot><App /></RecoilRoot>\n  </Router>, document.getElementById('root'));\n"],"sourceRoot":""}