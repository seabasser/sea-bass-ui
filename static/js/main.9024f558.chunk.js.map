{"version":3,"sources":["components/section/Section.tsx","components/dropdown/Dropdown.tsx","components/dropdown/DropdownItem.tsx","components/masthead/Masthead.tsx","components/main/Main.tsx","components/button/Button.tsx","components/go/Go.tsx","components/heading/Heading.tsx","utils/index.tsx","routes/Landing.tsx","store/currency.tsx","store/prices.tsx","components/currency/CurrencyDisplay.tsx","routes/Find.tsx","routes/Make.tsx","routes/NotFound.tsx","hooks/useFetch.ts","components/currency/CurrencySelector.tsx","App.tsx","index.tsx"],"names":["Section","className","name","children","props","classes","classNames","Dropdown","id","onChange","DropdownItem","value","key","Masthead","Main","Button","Go","to","Heading","Level","weight","isSmall","defaultProps","getParams","param","split","liquorList","Landing","history","useHistory","sortedLiquorList","sort","React","useState","selectedItem","setSelectedItem","onSubmit","e","preventDefault","push","pathname","search","htmlFor","event","target","map","liquor","string","charAt","toUpperCase","slice","type","currencyContentState","atom","default","pricesContentState","BTC","ETH","LTC","USD","CurrencyDisplay","currency","price","fakeCocktails","Find","exchangeRate","input","location","isFancy","setIsFancy","useRecoilValue","prices","handleFancyFlip","currentCurrency","calculatedCost","parseFloat","toFixed","Fragment","onClick","cocktail","Make","useFetch","url","options","cache","useRef","cancelRequest","initialState","error","undefined","data","useReducer","state","action","payload","dispatch","useEffect","a","current","fetch","response","ok","Error","statusText","json","fetchData","currencies","CurrencySelector","setCurrency","useSetRecoilState","App","setPrices","rates","exact","path","component","NotFound","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.9024f558.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Section.scss';\n\ninterface MainProps {\n  className?: string,\n  children: ReactNode,\n  name: string,\n}\n\nconst Section: React.FC<MainProps> = ({ className, name, children, ...props }) => {\n\n  const classes = classNames(\n    'section',\n    `section-${name}`,\n    className\n  );\n\n  return (\n    <section className={classes} {...props}>{children}</section>\n  );\n};\n\nexport default Section;\n\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Dropdown.scss';\n\ninterface DropdownProps {\n  className?: string,\n  name: string,\n  id: string,\n  children: ReactNode,\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ className, name, id, children, onChange, ...props }) => {\n\n  const classes = classNames(\n    'dropdown',\n    className\n  );\n\n\n  return (\n    <select className={classes} name={name} id={id} onChange={onChange} {...props}>\n      {children}\n    </select>\n  );\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './DropdownItem.scss';\n\ninterface DropdownItemProps {\n  className?: string,\n  value: string,\n  children: string\n}\n\nconst DropdownItem: React.FC<DropdownItemProps> = ({ className, value, children, ...props }) => {\n\n  const classes = classNames(\n    'dropdownitem',\n    className\n  );\n\n  return (\n    <option className={classes} value={value} {...props} key={value}>{children}</option>\n  );\n};\n\nexport default DropdownItem;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Masthead.scss';\n\ninterface SampleProps {\n  className?: string,\n  children: ReactNode\n}\n\nconst Masthead: React.FC<SampleProps> = ({ className, children, ...props }) => {\n\n  const classes = classNames(\n    'masthead',\n    className\n  );\n\n\n  return (\n    <header className={classes} {...props}> { children } </header>\n  );\n};\n\nexport default Masthead;\n","import React, { ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Main.scss';\r\n\r\ninterface MainProps {\r\n    children: ReactNode,\r\n    className?: string,\r\n    name: string\r\n}\r\n\r\nconst Main: React.FC<MainProps> = ({ children, className, name='base'}: MainProps) => {\r\n  \r\n  const classes = classNames(\r\n    'page',\r\n    `page-${name}`,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <main className={classes}>\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Button.scss';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    className?: string\n    children: React.ReactNode\n}\n\nconst Button: React.FC<ButtonProps> = ({ className, children, ...props }) => {\n\n  const classes = classNames(\n    'button',\n    className\n  );\n\n  return (\n    <button className={classes} {...props}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport './Go.scss';\n\ninterface GoProps {\n  className?: string,\n  to: {\n    pathname: string,\n    search?: string,\n    hash?: string,\n    state?: string,\n  },\n  children: ReactNode\n}\n\nconst Go: React.FC<GoProps> = ({ className, to, children, ...props }) => {\n\n  const classes = classNames(\n    'go',\n    className\n  );\n\n\n  return (\n    <Link to={to} {...props} className={classes}> { children } </Link>\n  );\n};\n\nexport default Go;\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport './Heading.scss';\n\ninterface HeadingProps {\n  className?: string,\n  Level: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  children: ReactNode,\n  isSmall?: boolean\n  weight?: 'light' | 'normal' | 'bold'\n}\n\nconst Heading: React.FC<HeadingProps> = ({ className, Level, weight, isSmall, children }) => {\n\n  const classes = classNames(\n    'heading',\n    `heading-${Level}`,\n    `heading-weight--${weight}`,\n    { [`heading-${Level}--isSmall`] : isSmall },\n    className\n  );\n\n  return (\n    <Level className={classes}>\n      {children}\n    </Level>\n  );\n};\n\n\nHeading.defaultProps = {\n  Level: 'h1',\n  weight: 'normal'\n};\n\nexport default Heading;","export const capitalizeFirstLetter = (string:string):string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// get params from url\nexport const getParams = (param: string):string => {\n  return param.split('=')[1];\n}\n\n// converts price and limits decimal places\nexport const normalizePrice = (price: number, exchangeRate: number, digitsPastDecimal: number):number => {\n  return parseFloat((exchangeRate * price).toFixed(digitsPastDecimal)); // sub for current price later\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Dropdown, DropdownItem, Main, Button } from '../components';\nimport { capitalizeFirstLetter } from '../utils';\n\nimport './Landing.scss';\n\nconst liquorList = [\n  'vodka',\n  'gin',\n  'whiskey',\n  'tequila',\n  'rum'\n];\n\nconst Landing: React.FC = () => {\n\n  const history = useHistory();\n\n  const sortedLiquorList = liquorList.sort();\n\n  const [selectedItem, setSelectedItem] = React.useState(sortedLiquorList[0]);\n\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>):void => {\n    e.preventDefault();\n    history.push({\n      pathname: '/find',\n      search: `?liquor=${selectedItem}`\n    });\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n    setSelectedItem(value);\n  };\n\n  return (\n    <Main name='landing'>\n      <form onSubmit={handleSubmit} className='landing-form'>\n        <label htmlFor='liquor'> Choose a liquor</label>\n        <Dropdown name='liquor' id='liquor' onChange={handleChange}>\n          { sortedLiquorList.map(liquor => <DropdownItem value={liquor} key={liquor}>{capitalizeFirstLetter(liquor)}</DropdownItem>)}\n        </Dropdown>\n        <Button type='submit' value='Submit'>Find it</Button>\n      </form>\n    </Main>\n  );\n};\n\nexport default Landing;\n","import { atom } from 'recoil';\n\nexport interface CurrencyContent {\n  type: 'USD' | 'ETH' | 'BTC' | 'LTC';\n}\n\nconst initialState: CurrencyContent = {\n  type: 'USD'\n};\n\nexport const currencyContentState = atom<CurrencyContent>({\n  key: 'currencyContents',\n  default: initialState,\n});\n","import { atom } from 'recoil';\n\nexport interface PricesContent {\n\tBTC: number,\n\tETH: number,\n\tLTC: number,\n\tUSD: number,\n}\n\nconst initialState: PricesContent = {\n  BTC: 0,\n  ETH: 0,\n  LTC: 0,\n  USD: 1\n};\n\nexport const pricesContentState = atom<PricesContent>({\n  key: 'PricesContents',\n  default: initialState,\n});\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Currency.scss';\n\ninterface CurrencyDisplayProps {\n  className?: string,\n  price: number,\n  currency: 'USD' | 'ETH' | 'BTC' | 'LTC'\n}\n\nconst CurrencyDisplay: React.FC<CurrencyDisplayProps> = ({ className, currency, price, ...props }) => {\n\n  const classes = classNames(\n    'currency',\n    `currency-${currency}`,\n    className\n  );\n\n\n  return (\n    <span className={classes} {...props}> { price } <sub>{currency}</sub></span>\n  );\n};\n\nexport default CurrencyDisplay;\n","import React, { useState } from 'react';\nimport { useRecoilValue } from 'recoil'\nimport { currencyContentState } from '../store/currency';\nimport { pricesContentState } from '../store/prices';\nimport { useHistory } from 'react-router-dom';\nimport { getParams, normalizePrice } from '../utils';\nimport { Main, Section, Button, Go, Heading } from '../components';\n\nimport './Find.scss';\nimport { CurrencyDisplay } from '../components/currency';\n\nconst fakeCocktails = [\n  'foo',\n  'bar'\n]\n\nconst Find: React.FC = () => {\n\n  const input = getParams(useHistory().location.search);\n  const [isFancy, setIsFancy] = useState(false);\n  const currency = useRecoilValue(currencyContentState);\n  const prices = useRecoilValue(pricesContentState);\n\n  const handleFancyFlip = () => { \n    setIsFancy(!isFancy);\n  }\n\n  const currentCurrency = currency.type;\n  const calculatedCost = normalizePrice(5.98, prices[currentCurrency], 5);\n  return (\n    <Main name='find' className={isFancy ? 'isFancy' : 'isCheap'}>\n      <Section name='results'>\n        { !isFancy\n          ? <React.Fragment>\n            <Heading Level='h2' weight='light'> The absolute cheapest, bottom shelf {input} we could find is</Heading>\n            <span> foo for <CurrencyDisplay price={calculatedCost} currency={currency.type}/></span>\n            <Button onClick={handleFancyFlip}>\n              ✨ I'm feeling fancy ✨\n            </Button>\n          </React.Fragment>\n          : <React.Fragment>\n            <span> Oh, you're feeling fancy? Try: bar </span>\n            <Button onClick={handleFancyFlip}>\n                I'm feeling cheap\n            </Button>\n          </React.Fragment>\n        }\n      </Section>\n      <Section name='cocktails'>\n        <Heading Level='h2' weight='light'> here are the cocktails you could make</Heading>\n        <ul>\n          {fakeCocktails.map(cocktail =>\n            <li key={cocktail} >\n              <Go to={{ pathname: '/make', search: `cocktail=${cocktail}`}}>\n                {cocktail}\n              </Go>\n            </li>\n          )}\n        </ul>\n      </Section>\n    </Main>\n  );\n};\n\nexport default Find;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getParams } from '../utils';\nimport { Main, Section } from '../components';\n\nconst Make: React.FC = () => {\n\n  const input = getParams(useHistory().location.search);\n\n  return (\n    <Main name='make'>\n      <Section name='results'>\n        <span> You want to make {input} </span>\n      </Section>\n    </Main>\n  );\n};\n\nexport default Make;\n","import React from 'react';\n\nimport './NotFound.scss';\n\nconst Landing: React.FC = () => {\n\n  return (\n    <span> oops </span>\n  );\n};\n\nexport default Landing;\n","import { useEffect, useReducer, useRef } from 'react'\n\ninterface State<T> {\n  data?: T\n  error?: Error\n}\n\ntype Cache<T> = { [url: string]: T }\n\ntype Action<T> =\n  | { type: 'loading' }\n  | { type: 'fetched'; payload: T }\n  | { type: 'error'; payload: Error }\n\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({})\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false)\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  }\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n    case 'loading':\n      return { ...initialState }\n    case 'fetched':\n      return { ...initialState, data: action.payload }\n    case 'error':\n      return { ...initialState, error: action.payload }\n    default:\n      return state\n    }\n  }\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState)\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) { return }\n    const fetchData = async () => {\n      dispatch({ type: 'loading' })\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: 'fetched', payload: cache.current[url] })\n        return\n      }\n      try {\n        const response = await fetch(url, options)\n        if (!response.ok) {\n          throw new Error(response.statusText)\n        }\n        const data = (await response.json()) as T\n        cache.current[url] = data\n        if (cancelRequest.current) { return }\n        dispatch({ type: 'fetched', payload: data })\n      } catch (error) {\n        if (cancelRequest.current) { return }\n        dispatch({ type: 'error', payload: error as Error })\n      }\n    }\n    void fetchData()\n    return () => {\n      cancelRequest.current = true\n    }\n  }, [url])\n  return state\n}\n\nexport default useFetch","import React from 'react';\nimport { useSetRecoilState } from 'recoil'\n\nimport { Dropdown, DropdownItem } from '../';\nimport { currencyContentState } from '../../store/currency';\n\nconst currencies = ['USD', 'ETH', 'BTC', 'LTC'];\n\nconst CurrencySelector: React.FC = () => {\n\n  const setCurrency = useSetRecoilState(currencyContentState);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n\n    // TODO rewrite this later\n    switch(value) {\n    case 'USD':\n      setCurrency({ type: 'USD' });\n      break;\n    case 'ETH':\n      setCurrency({ type: 'ETH' });\n      break;\n    case 'BTC':\n      setCurrency({ type: 'BTC' });\n      break;\n    case 'LTC':\n      setCurrency({ type: 'LTC' });\n      break;\n    default:\n      setCurrency({ type: 'USD' });\n      break;\n    }\n  };\n\n  return (\n    <Dropdown name='currency' id='currency' onChange={handleChange}>\n      { currencies.map(currency => <DropdownItem value={currency} key={currency}>{currency}</DropdownItem>)}\n    </Dropdown>\n  );\n};\n\nexport default CurrencySelector;\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil'\r\n\r\nimport Landing from './routes/Landing';\r\nimport Find from './routes/Find';\r\nimport Make from './routes/Make';\r\nimport NotFound from './routes/NotFound';\r\n\r\nimport './App.scss';\r\nimport { Masthead, Go } from './components';\r\nimport useFetch from './hooks/useFetch';\r\n\r\nimport CurrencySelector from './components/currency/CurrencySelector';\r\nimport { pricesContentState } from './store/prices';\r\n\r\nimport { ExchangeInterface } from './interfaces';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const setPrices = useSetRecoilState(pricesContentState);\r\n\r\n  // this throws an error: https://github.com/facebookexperimental/Recoil/issues/12\r\n  const { data } = useFetch<ExchangeInterface>('https://api.coinbase.com/v2/exchange-rates?currency=USD');\r\n  data && setPrices({\r\n    BTC: data?.data.rates.BTC,\r\n    ETH: data?.data.rates.ETH,\r\n    LTC: data?.data.rates.LTC,\r\n    USD: 1\r\n  });\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Masthead> <Go to={{pathname: '/'}}>Seabass</Go><CurrencySelector/></Masthead>\r\n      <Switch>\r\n        <Route exact path='/' component={ Landing }/>\r\n        <Route path='/find' component={ Find }/>\r\n        <Route path='/make' component={ Make }/>\r\n        <Route component={ NotFound } />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter as Router, } from 'react-router-dom';\nimport {\n  RecoilRoot\n} from 'recoil';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <RecoilRoot><App /></RecoilRoot>\n  </Router>, document.getElementById('root'));\n"],"sourceRoot":""}